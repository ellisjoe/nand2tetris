@256
D=A
@SP
M=D
@3000
D=A
@THIS
M=D
@4000
D=A
@THAT
M=D
@Sys.init$ret2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys$Sys.init
0;JMP
(Sys.init$ret2)
// Function[filename=Sys, functionName=Sys.init, nVars=0]
(Sys$Sys.init)
D=0
// Push[filename=Sys, segment=constant, index=4000]
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Sys, segment=pointer, index=0]
@SP
M=M-1
A=M
D=M
@R13
M=D
@0
D=A
@THIS
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Sys, segment=constant, index=5000]
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Sys, segment=pointer, index=1]
@SP
M=M-1
A=M
D=M
@R13
M=D
@1
D=A
@THIS
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Call[filename=Sys, functionName=Sys.init, functionToCall=Sys.main, nArgs=0]
@Sys.Sys.init$ret0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys$Sys.main
0;JMP
(Sys.Sys.init$ret0)
// Pop[filename=Sys, segment=temp, index=1]
@SP
M=M-1
A=M
D=M
@R13
M=D
@1
D=A
@5
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Label[filename=Sys, functionName=Sys.init, label=LOOP]
(Sys.Sys.init$LOOP)
// GoTo[filename=Sys, functionName=Sys.init, label=LOOP]
@Sys.Sys.init$LOOP
0;JMP
// Function[filename=Sys, functionName=Sys.main, nVars=5]
(Sys$Sys.main)
D=0
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
// Push[filename=Sys, segment=constant, index=4001]
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Sys, segment=pointer, index=0]
@SP
M=M-1
A=M
D=M
@R13
M=D
@0
D=A
@THIS
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Sys, segment=constant, index=5001]
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Sys, segment=pointer, index=1]
@SP
M=M-1
A=M
D=M
@R13
M=D
@1
D=A
@THIS
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Sys, segment=constant, index=200]
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Sys, segment=local, index=1]
@SP
M=M-1
A=M
D=M
@R13
M=D
@1
D=A
@LCL
A=M
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Sys, segment=constant, index=40]
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Sys, segment=local, index=2]
@SP
M=M-1
A=M
D=M
@R13
M=D
@2
D=A
@LCL
A=M
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Sys, segment=constant, index=6]
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Sys, segment=local, index=3]
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=A
@LCL
A=M
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Sys, segment=constant, index=123]
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// Call[filename=Sys, functionName=Sys.main, functionToCall=Sys.add12, nArgs=1]
@Sys.Sys.main$ret1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys$Sys.add12
0;JMP
(Sys.Sys.main$ret1)
// Pop[filename=Sys, segment=temp, index=0]
@SP
M=M-1
A=M
D=M
@R13
M=D
@0
D=A
@5
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Sys, segment=local, index=0]
@0
D=A
@LCL
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push[filename=Sys, segment=local, index=1]
@1
D=A
@LCL
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push[filename=Sys, segment=local, index=2]
@2
D=A
@LCL
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push[filename=Sys, segment=local, index=3]
@3
D=A
@LCL
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push[filename=Sys, segment=local, index=4]
@4
D=A
@LCL
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Add[]
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R13
D=M
@R14
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// Add[]
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R13
D=M
@R14
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// Add[]
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R13
D=M
@R14
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// Add[]
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R13
D=M
@R14
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// Return[]
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
A=M
D=A+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Function[filename=Sys, functionName=Sys.add12, nVars=0]
(Sys$Sys.add12)
D=0
// Push[filename=Sys, segment=constant, index=4002]
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Sys, segment=pointer, index=0]
@SP
M=M-1
A=M
D=M
@R13
M=D
@0
D=A
@THIS
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Sys, segment=constant, index=5002]
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Sys, segment=pointer, index=1]
@SP
M=M-1
A=M
D=M
@R13
M=D
@1
D=A
@THIS
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Sys, segment=argument, index=0]
@0
D=A
@ARG
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push[filename=Sys, segment=constant, index=12]
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
// Add[]
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R13
D=M
@R14
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// Return[]
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
A=M
D=A+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
