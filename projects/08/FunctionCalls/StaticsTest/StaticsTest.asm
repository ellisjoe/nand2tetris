@256
D=A
@SP
M=D
@3000
D=A
@THIS
M=D
@4000
D=A
@THAT
M=D
@Sys.init$ret4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys$Sys.init
0;JMP
(Sys.init$ret4)
// Function[filename=Class1, functionName=Class1.set, nVars=0]
(Class1$Class1.set)
D=0
// Push[filename=Class1, segment=argument, index=0]
@0
D=A
@ARG
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Class1, segment=static, index=0]
@SP
M=M-1
A=M
D=M
@R13
M=D
@Class1.0
D=A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Class1, segment=argument, index=1]
@1
D=A
@ARG
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Class1, segment=static, index=1]
@SP
M=M-1
A=M
D=M
@R13
M=D
@Class1.1
D=A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Class1, segment=constant, index=0]
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// Return[]
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
A=M
D=A+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Function[filename=Class1, functionName=Class1.get, nVars=0]
(Class1$Class1.get)
D=0
// Push[filename=Class1, segment=static, index=0]
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push[filename=Class1, segment=static, index=1]
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// Sub[]
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R13
D=M
@R14
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// Return[]
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
A=M
D=A+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Function[filename=Sys, functionName=Sys.init, nVars=0]
(Sys$Sys.init)
D=0
// Push[filename=Sys, segment=constant, index=6]
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push[filename=Sys, segment=constant, index=8]
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// Call[filename=Sys, functionName=Sys.init, functionToCall=Class1.set, nArgs=2]
@Sys.Sys.init$ret0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1$Class1.set
0;JMP
(Sys.Sys.init$ret0)
// Pop[filename=Sys, segment=temp, index=0]
@SP
M=M-1
A=M
D=M
@R13
M=D
@0
D=A
@5
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Sys, segment=constant, index=23]
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push[filename=Sys, segment=constant, index=15]
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// Call[filename=Sys, functionName=Sys.init, functionToCall=Class2.set, nArgs=2]
@Sys.Sys.init$ret1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2$Class2.set
0;JMP
(Sys.Sys.init$ret1)
// Pop[filename=Sys, segment=temp, index=0]
@SP
M=M-1
A=M
D=M
@R13
M=D
@0
D=A
@5
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Call[filename=Sys, functionName=Sys.init, functionToCall=Class1.get, nArgs=0]
@Sys.Sys.init$ret2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1$Class1.get
0;JMP
(Sys.Sys.init$ret2)
// Call[filename=Sys, functionName=Sys.init, functionToCall=Class2.get, nArgs=0]
@Sys.Sys.init$ret3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2$Class2.get
0;JMP
(Sys.Sys.init$ret3)
// Label[filename=Sys, functionName=Sys.init, label=END]
(Sys.Sys.init$END)
// GoTo[filename=Sys, functionName=Sys.init, label=END]
@Sys.Sys.init$END
0;JMP
// Function[filename=Class2, functionName=Class2.set, nVars=0]
(Class2$Class2.set)
D=0
// Push[filename=Class2, segment=argument, index=0]
@0
D=A
@ARG
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Class2, segment=static, index=0]
@SP
M=M-1
A=M
D=M
@R13
M=D
@Class2.0
D=A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Class2, segment=argument, index=1]
@1
D=A
@ARG
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop[filename=Class2, segment=static, index=1]
@SP
M=M-1
A=M
D=M
@R13
M=D
@Class2.1
D=A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Push[filename=Class2, segment=constant, index=0]
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// Return[]
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
A=M
D=A+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Function[filename=Class2, functionName=Class2.get, nVars=0]
(Class2$Class2.get)
D=0
// Push[filename=Class2, segment=static, index=0]
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push[filename=Class2, segment=static, index=1]
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// Sub[]
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R13
D=M
@R14
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// Return[]
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
A=M
D=A+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
