/*
 * This source file was generated by the Gradle 'init' task
 */
package com.jellis.nand2tetris.translator;

import com.jellis.nand2tetris.translator.commands.Command;

import java.io.BufferedWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class Translator {
    private Translator() {}

    public static void translate(Path vmPath, Path asmPath) {
        try {
            List<String> assembly = Files.readAllLines(vmPath).stream()
                    .filter(l -> !l.startsWith("//") && !l.isEmpty())
                    .map(Command::parse)
                    .flatMap(c -> c.debugAssembly().stream())
                    .toList();

            try (BufferedWriter writer = Files.newBufferedWriter(asmPath)) {
                for (String b : assembly) {
                    writer.write(b);
                    writer.write("\n");
                }
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}
